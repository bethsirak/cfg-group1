{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GBE-d\\\\signin-page\\\\src\\\\components\\\\home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login({\n  setToken\n}) {\n  _s();\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  // Generate JSX code for error message\n  const renderErrorMessage = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: errorMessages.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n  // User Login info\n  const database = [{\n    username: \"user1@hello.com\",\n    password: \"pass1\"\n  }, {\n    username: \"user2@hello.com\",\n    password: \"pass2\"\n  }];\n  const errors = {\n    uname: \"invalid username\",\n    pass: \"invalid password\"\n  };\n  const handleSubmit = event => {\n    //Prevent page reload\n    event.preventDefault();\n    var {\n      uname,\n      pword\n    } = document.forms[0];\n\n    // Find user login info\n    const userData = database.find(user => user.username === uname.value);\n\n    // Compare user info\n    if (userData) {\n      if (userData.password !== pword.value) {\n        // Invalid password\n        setErrorMessages({\n          name: \"pass\",\n          message: errors.pword\n        });\n      } else {\n        setIsSubmitted(true);\n      }\n    } else {\n      // Username not found\n      setErrorMessages({\n        name: \"uname\",\n        message: errors.uname\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Log in!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"renderForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"User Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"uname\",\n          placeholder: \"Email...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), renderErrorMessage(\"uname\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"pword\",\n          placeholder: \"Password...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), renderErrorMessage(\"pword\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Button\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), isSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"User is successfully logged in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 28\n        }, this) : renderForm]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"xHac37XC1FUyoDun112aRZB/AH4=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","propTypes","jsxDEV","_jsxDEV","Login","setToken","_s","errorMessages","setErrorMessages","isSubmitted","setIsSubmitted","renderErrorMessage","name","className","children","message","fileName","_jsxFileName","lineNumber","columnNumber","database","username","password","errors","uname","pass","handleSubmit","event","preventDefault","pword","document","forms","userData","find","user","value","onSubmit","type","placeholder","required","renderForm","_c","$RefreshReg$"],"sources":["C:/Users/GBE-d/signin-page/src/components/home.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport propTypes from 'prop-types'\r\n\r\n\r\n\r\nexport default function Login({setToken}) {\r\n    \r\n    const [errorMessages, setErrorMessages] = useState({});\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n    // Generate JSX code for error message\r\n    const renderErrorMessage = (name) =>\r\n    name === errorMessages.name && (\r\n    <div className=\"error\">{errorMessages.message}</div>\r\n    );\r\n    // User Login info\r\n    const database = [\r\n        {\r\n        username: \"user1@hello.com\",\r\n        password: \"pass1\"\r\n        },\r\n        {\r\n        username: \"user2@hello.com\",\r\n        password: \"pass2\"\r\n        }\r\n    ];\r\n    \r\n    const errors = {\r\n        uname: \"invalid username\",\r\n        pass: \"invalid password\"\r\n    };\r\n    \r\n    const handleSubmit = (event) => {\r\n        //Prevent page reload\r\n        event.preventDefault();\r\n    \r\n        var { uname, pword } = document.forms[0];\r\n    \r\n        // Find user login info\r\n        const userData = database.find((user) => user.username === uname.value);\r\n    \r\n        // Compare user info\r\n        if (userData) {\r\n        if (userData.password !== pword.value) {\r\n            // Invalid password\r\n            setErrorMessages({ name: \"pass\", message: errors.pword });\r\n        } else {\r\n            setIsSubmitted(true);\r\n        }\r\n        } else {\r\n        // Username not found\r\n        setErrorMessages({ name: \"uname\", message: errors.uname });\r\n        }\r\n    };\r\n        \r\n        \r\n    return(\r\n        <div>\r\n            <h1>Log in!</h1>\r\n        <form className='renderForm' onSubmit={handleSubmit}>\r\n        <label className='form-group'>\r\n            <p>User Email</p>\r\n            <input type=\"email\" className=\"uname\" placeholder='Email...' required/>\r\n            {renderErrorMessage(\"uname\")}\r\n        </label>\r\n        <label className='form-group'>\r\n            <p>Password</p>\r\n            <input type=\"password\" className=\"pword\" placeholder='Password...' required\r\n            />{renderErrorMessage(\"pword\")}\r\n        </label>\r\n        <div>\r\n            <button className='Button'>Login</button>\r\n        </div>\r\n        <div className=\"login-form\">\r\n        <div className=\"title\">Sign In</div>\r\n            {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\r\n        </div>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}